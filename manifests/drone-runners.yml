kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 namespace: default
 name: drone
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - create
  - delete
  - list
  - watch
  - update

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: drone
 namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
 kind: Role
 name: drone
 apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: drone
 labels:
  app.kubernetes.io/name: drone
spec:
 replicas: 1
 selector:
  matchLabels:
   app.kubernetes.io/name: drone
 template:
  metadata:
   labels:
    app.kubernetes.io/name: drone
  spec:
   containers:
   - name: runner
     image: drone/drone-runner-kube:latest
     ports:
     - containerPort: 3000
     env:
     - name: DRONE_RPC_HOST
       value: drone.ogkevin.nl
     - name: DRONE_RPC_PROTO
       value: https
     - name: DRONE_RPC_SECRET
       # This is manually updated by hand after deployment
       # Proper setup would store this in vault and use vault injector
       # to retrieve this value.
       value: super-duper-secret